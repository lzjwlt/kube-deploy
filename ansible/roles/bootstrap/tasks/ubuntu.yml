---
- name: register lsb release
  shell: lsb_release -cs
  register: release

- name: set vars
  set_fact:
    docker_gpg_url: https://download.docker.com/linux/ubuntu/gpg
    docker_repo_apt: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ release.stdout }} stable"
    kube_gpg_url:  https://packages.cloud.google.com/apt/doc/apt-key.gpg 
    kube_repo_apt: deb http://apt.kubernetes.io/ kubernetes-xenial main
    when: gfw is undefined or not gfw

- name: set vars gfw
  set_fact:
    docker_gpg_url: http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg
    docker_repo_apt: "deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu {{ release.stdout }} stable"
    kube_gpg_url: https://mirrors.aliyun.com/kubernetes/apt/doc/apt-key.gpg
    kube_repo_apt: deb https://mirrors.aliyun.com/kubernetes/apt kubernetes-xenial main
  when: gfw is defined and gfw

- name: create temp dir
  file:
    path: "{{ tmp_dir }}"
    state: directory

# install Docker
- block:
  - name: remove old Docker
    apt:
      name: "{{ item }}"
      state: absent
    with_items:
      - apt-get
      - remove 
      - docker 
      - docker-engine 
      - docker.io 
      - containerd 
      - runc 
  
  - name: install some tools
    apt:
      name: "{{ item }}"
    with_items:
      - apt-transport-https
      - ca-certificates
      - curl 
      - gnupg-agent
      - software-properties-common

  - name: add apt key
    apt_key:
      url: "{{ docker_gpg_url }}"
      state: present
  
  - name: add apt repo
    apt_repository: 
      repo: "{{ docker_repo_apt }}"
      state: present
  
  - name: install docker
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - docker-ce
      - docker-ce-cli
      - containerd.io


# install k8s bin
- block:
  - name: remove old kubernetes
    apt:
      name: "{{ item }}"
      state: absent
    with_items:
      - kubelet
      - kubeadm
      - kubectl

  - name: add apt key
    apt_key:
      url: "{{ kube_gpg_url }}"
      state: present
  
  - name: add apt repo
    apt_repository: 
      repo: "{{ kube_repo_apt }}"
      state: present
  
  - name: install kube binaries
    apt:
      name: "{{ item }}"
      state: present
      update_cache: yes
    with_items:
      - kubelet
      - kubeadm
      - kubectl