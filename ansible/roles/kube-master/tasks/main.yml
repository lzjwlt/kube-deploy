---

- name: Reset Kubernetes component
  shell: "kubeadm reset --force"

- name: set gfw
  set_fact:
    kube_init_opt: 

- name: Init Kubernetes cluster
  when: gfw is undefined or not gfw
  shell: |
    "kubeadm init --service-cidr {{ service_cidr }} --pod-network-cidr {{ pod_network_cidr }} --ignore-preflight-errors=NumCPU"

- name: Init Kubernetes cluster gfw
  when: gfw is defined and gfw
  shell: "kubeadm init --service-cidr {{ service_cidr }} --pod-network-cidr {{ pod_network_cidr }} --image-repository registry.aliyuncs.com/google_containers --ignore-preflight-errors=NumCPU"
  
- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory

- name: Copy admin.conf to Home directory
  copy:
    src: /etc/kubernetes/admin.conf
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true

- name: Deploy kubernetes dashboard into cluster
  command: |
    kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended.yaml
  register: create_result
  until: create_result.rc == 0
  retries: 5
  delay: 2
  ignore_errors: true

- name: Enable and check kubelet service
  systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes
  register: started_kubelet

- name: "Copy config file"
  fetch:
    src: /etc/kubernetes/admin.conf 
    dest: "{{ lookup('env', 'HOME') }}/admin.conf"
    flat: yes
  run_once: yes
  ignore_errors: yes


# gen join cmd
- block:
  - name: gen kube token
    shell: kubeadm token create

  - name: list token
    shell: kubeadm token list  | awk -F" " '{print $1}' |tail -n 1
    register: kube_token
  
  - name: calc hash
    shell: openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | awk  '{print $2}'
    register: kube_hash
  
  - name: gen join cmd
    shell: |
      cat <<EOF > {{ tmp_dir }}/joincmd 
      kubeadm join {{ hostvars[groups["kube-master"][0]]["ansible_default_ipv4"].address | default(groups["kube-master"][0]) }}:6443 --token {{ kube_token.stdout }}  --discovery-token-unsafe-skip-ca-verification 
      sha256:{{ kube_hash.stdout }}
      EOF
      
  - name: "Copy joincmd file"
    fetch:
      src: "{{ tmp_dir }}/joincmd" 
      dest: "{{ lookup('env', 'HOME') }}/joincmd"
      flat: yes
    run_once: yes
